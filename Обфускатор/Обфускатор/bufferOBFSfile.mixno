#define _CRT_SECURE_NO_WARNINGS 
#include <stdio.h> 
#include <string.h> 
#include <locale.h>

int fun1414 = 0, fun1424 = 0; 
char fun1434[10000], fun1444 = 'n', fun1454 = 'n', fun1464[10000], fun1474 = 'n', fun1484 = 'n';
int fun1494 = strlen(fun1434);
int fun14051 = 0, fun14052 = 0; 

void fun1415(char fun1425[], char fun1435[]) {
	FILE *fun1445 = fopen(fun1425, "r");
	FILE *fun1455 = fopen(fun1435, "w");

for (fun1414 = 0; fun1414<10000; fun1414++) { fun1464[fun1414] = fun1434[fun1414] = '\0'; }

while (!feof(fun1445)) {
fun1465:
	fun1444 = fgetc(fun1445);
	if (feof(fun1445)) { break; }
fun1475:
	
	if (fun1444 == '\"') {
		fputc('\"', fun1455);
		fun1414 = 0;
		fun1424 = 0;
		fun1454 = 'n';
		fun1444 = '#';
		while ((fun1444 != '\"') || (fun1424 % 2 != 0)) {
		fun1485:fun1454 = fun1444;
			fun1444 = fgetc(fun1445);
			if (feof(fun1445)) { goto fun1495; }
			if (((fun1444 == '\n') && (fun1454 == '\\') && (fun1424 % 2 == 1))) { fputc('\n', fun1455); fun1424 = 0; goto fun1485; }
			else { if (fun1444 == '\n') { fputc('\n', fun1455); goto fun1465; } }
			if (fun1444 == '\\') {
				if (fun1454 == '\"') { fun1424 = 1; }
				else { fun1424++; }
			}
			else { if (fun1444 != '\"') { if ((fun1454 == '\"') && (fun1424 % 2 == 1)) { fputc(fun1444, fun1455); goto fun1465;
			} else { fun1424 = 0; } } }
			fputc(fun1444, fun1455);
		}
		
		goto fun1465;
	}
	else {
	fun1406:;
		
		
		if (fun1444 == '\'') {
			fputc('\'', fun1455);
			fun1414 = 0;
			fun1424 = 0;
			fun1454 = 'n';
			fun1444 = '#';
			while ((fun1444 != '\'') || (fun1424 % 2 != 0)) {
			fun1416:fun1454 = fun1444;
				fun1444 = fgetc(fun1445);
				if (feof(fun1445)) { goto fun1495; }
				if (fun1444 == '\n') { fputc('\n', fun1455); goto fun1465; }
				if (fun1444 == '\\') {
					if (fun1454 == '\'') { fun1424 = 1; }
					else { fun1424++; }
				}
				else { if (fun1444 != '\'') { if ((fun1454 == '\'') && (fun1424 % 2 == 1)) { fputc(fun1444, fun1455); goto fun1465;
				} else { fun1424 = 0; } } }
				fputc(fun1444, fun1455);
			}
			goto fun1465;
		}
		else {
			

			
			if (fun1444 == '/') {
				fun1444 = fgetc(fun1445); if (feof(fun1445)) { fputc('/', fun1455); goto fun1495; }
				if (fun1444 == '/') {
					fputc('\n', fun1455); while (1) {
						fun1454 = fun1444;
						fun1444 = fgetc(fun1445);
						if (feof(fun1445)) { goto fun1495; }
						if (fun1444 == '\n') {
							if (fun1454 == '\\') {
								continue;
							}
							else { break; }
						}
					}
					goto fun1465;
				}
				else {
					if (fun1444 == '*') {
						fun1474 = 'i'; fun1484 = 'i'; while ((fun1474 != '*') || (fun1484 != '/')) { fun1474 = fun1484; fun1484 = fgetc(fun1445); if (feof(fun1445)) { goto fun1495; } } goto fun1465;
					}
					else {
						fputc('/', fun1455); goto fun1475;
					}
				}
				goto fun1465;
			}
			else { fputc(fun1444, fun1455); }
		}
	}

	

}
fun1495:
	fclose(fun1445);
	fclose(fun1455);
}


int fun1426 = 0, fun1436 = -1, fun1446 = 0, fun1454_fun1456=0;
char fun1466[53] = "qwertyuioplkjhgfdsazxcvbnmQWERTYUIOPLKJHGFDSAZXCVBNM", fun1476[10000][100], fun1486[10000][100];

int fun1496(char fun1407) {
	for (int fun1417 = 0; fun1417 < 53; fun1417++) if (fun1407 == fun1466[fun1417]) return 1;
	return 0;
}

int fun1427(char fun14641[1000], char fun14642[1000]) {
	int fun1437 = 0;
	while (fun14641[fun1437] || fun14642[fun1437]) {
		if (fun14641[fun1437] != fun14642[fun1437]) return 0;
		fun1437++;
	}
	return 1;
}


char *fun1447() {
	int fun1457 = 0, fun1467 = 0;
	for (int fun1477 = 0; fun1477 < fun1436; fun1477++) {
		fun1457 = 0;
		while (fun1476[fun1477][fun1457] || fun1476[fun1436][fun1457]) {
			fun1467 = fun1477; if (fun1476[fun1477][fun1457] != fun1476[fun1436][fun1457]) goto fun1487; fun1457++;
		}
		fun1436--;
		return fun1486[fun1467];
	fun1487:;
	}
	return fun1486[fun1436];
}

void fun1497(char fun1464[100]) {
	fun1436++;
	int fun1408 = 0;
	while (fun1464[fun1408]) {
		fun1476[fun1436][fun1408] = fun1464[fun1408];
		fun1486[fun1436][fun1408] = fun1464[fun1408];
		fun1408++;
	}
	fun1476[fun1436][fun1408] = '\0';
	fun1486[fun1436][fun1408] = '\0';
}

void fun1418() {
	fun1497("int");
	fun1497("char");
	fun1497("long");
	fun1497("short");
	fun1497("for");
	fun1497("while");
	fun1497("do");
	fun1497("void");
	fun1497("printf");
	fun1497("scanf");
	fun1497("getch");
	fun1497("getchar");
	fun1497("return");
	fun1497("fgetc");
	fun1497("fputc");
	fun1497("fgets");
	fun1497("fputs");
	fun1497("FILE");
	fun1497("scanf");
	fun1497("else");
	fun1497("switch");
	fun1497("case");
	fun1497("elseif");
	fun1497("continue");
	fun1497("break");
	fun1497("goto");
	fun1497("if");
	fun1497("fopen");
	fun1497("fclose");;
	fun1497("strlen");
	fun1497("strcpy");
	fun1497("strncpy");
	fun1497("strcmp");
	fun1497("strncmp");
	fun1497("strcat");
	fun1497("strncat");
	fun1497("feof");
	fun1497("EOF");
	fun1497("main");
	fun1497("setlocale");
	fun1497("LC_ALL");
}

int main()
{
	setlocale(LC_ALL, "Russian");
	int fun1428 = 0;
	for (int fun1438 = 0; fun1438 < 10000;fun1438++) {
		int fun1448 = 3;
		fun1486[fun1438][0] = 'f'; fun1486[fun1438][1] = 'u'; fun1486[fun1438][2] = 'n'; int fun1458 = fun1438; while (fun1458) {
			fun1486[fun1438][fun1448++] = (fun1458 % 10) + 48; fun1458 /= 10;
		}
		fun1486[fun1438][fun1448] = '\0';
	}
	fun1418();

	char fun1425[100], fun1468[100] = "bufferOBFSfile.mixno", fun1444 = 'n';
	printf("Input file name:");
	scanf("%s", &fun1425);

	fun1415(fun1425, fun1468);

	FILE *fun1445 = fopen(fun1468, "r");
	
	FILE *fun1455 = fopen("Output.c", "w");

	char fun1478 = 'n';
	while (!feof(fun1445)) {
	fun14651:
		fun1478 = fun1444;
		fun1488:
		fun1444 = fgetc(fun1445);
		if (feof(fun1445)) { break; }

		
		if (fun1444 == '\"') {
			fputc('\"', fun1455);
			fun1414 = 0;
			fun1424 = 0;
			fun1454 = 'n';
			do {
			fun14851:fun1454 = fun1444;
				fun1444 = fgetc(fun1445);
				if (feof(fun1445)) { goto fun14951; }
				if (((fun1444 == '\n') && (fun1454 == '\\') && (fun1424 % 2 == 1))) { fputc('\n', fun1455); fun1424 = 0; goto fun14851; }
				else { if (fun1444 == '\n') { fputc('\n', fun1455); goto fun14651; } }
				if (fun1444 == '\\') {
					if (fun1454 == '\"') { fun1424 = 1; }
					else { fun1424++; }
				}
				else { if (fun1444 != '\"') { if ((fun1454 == '\"') && (fun1424 % 2 == 1)) { fputc(fun1444, fun1455); goto fun14651;
				} else { fun1424 = 0; } } }
				fputc(fun1444, fun1455);
			} while ((fun1444 != '\"') || (fun1424 % 2 != 0));
			
			goto fun14651;
		}
		else {
		fun14061:;
			
			
			if (fun1444 == '\'') {
				fputc('\'', fun1455);
				fun1414 = 0;
				fun1424 = 0;
				fun1454 = 'n';
				do {
				fun14161:fun1454 = fun1444;
					fun1444 = fgetc(fun1445);
					if (feof(fun1445)) { goto fun14951; }
					if (fun1444 == '\n') { fputc('\n', fun1455); goto fun14651; }
					if (fun1444 == '\\') {
						if (fun1454 == '\'') { fun1424 = 1; }
						else { fun1424++; }
					}
					else { if (fun1444 != '\'') { if ((fun1454=='\'')&&(fun1424 % 2 == 1)) { fputc(fun1444, fun1455); goto fun14651;
					} else { fun1424 = 0; } } }
					fputc(fun1444, fun1455);
				} while ((fun1444 != '\'') || (fun1424 % 2 != 0));
				goto fun14651;
			}
			else {
				
			fun1498:

				
				
				if (fun1428 == 0) {
					if (fun1444 == '#') { char fun1409[1000]; fgets(fun1409, 1000, fun1445); fputc('#', fun1455); fputs(fun1409, fun1455); continue; }
				}
				if (fun1444 == '{') fun1428 = 1;
				if ((fun1478 == ' ') && (fun1444 == ' ')) { goto fun1488; }
				if (fun1496(fun1444)) { if (fun1426 == 0) fun1436++; fun1426 = 1; fun1476[fun1436][fun1446++] = fun1444; }
				else {
					if (fun1426 == 1) {
						fun1476[fun1436][fun1446] = '\0'; fun1446 = 0;
						if (fun1427(fun1476[fun1436], "setlocale")) fun1454_fun1456 = 1;
						fputs(fun1447(), fun1455);
						if (fun1454_fun1456 == 1) {
							fputc(fun1444, fun1455);
							while (fun1444 != ';') { fun1444 = fgetc(fun1445); fputc(fun1444, fun1455); }
							fun1454_fun1456 = 0;
							fun1426 = 0;
							goto fun14651;
						}
					}
					fun1426 = 0;
					fputc(fun1444, fun1455);
				}
			}
		}
	}
fun14951:;

	return 0;
}